#include "stdafx.h"
#include <iostream>
#include <cmath>
using namespace std;

template <class T>
T maximum(T a, T b)
{
	if(a < b)
		return b;
	else
		return a;
}

template <class T>
T absolute(T a)
{
	if(a < 0)
		return -a;
	else
		return a;
}

template <class T>
T BinarySearch(const T *A, const int start, const int last, const T &value)
{
	if(start_index > last_index)
		return -1;
	else
	{
		int mid = (start + last)/2;
		if(A[mid] == value)
			return mid;
		else if(A[mid] > value)
		{
			for(start; start < mid - 1; start++)
				if(A[start] = value)
					return start;
			return -1;
		}
		else
		{
			for(mid += 1; mid < last; mid++)
				if(A[mid] == value)
					return mid;
			return -1;
		}
	}
}

template <class T>
T binarySearch(const T *A, const int start, const int last, const T value)
{
	if(start > last)
		return -1;
	else
	{
		int mid = (start + last) / 2;
		if(A[mid] == value)
			return mid;
		else if (A[mid] > value)
			binarySearch(A, start, mid - 1, value);
		else
			binarySearch(A, mid + 1, last, value);
	}
}
					
template <class T>
void mergeSort(const T* A, const int start, const int last)

int _tmain(int argc, _TCHAR* argv[])
{


	system("pause");
	return 0;
}
