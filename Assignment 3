	.globl conv
conv:
	dec %edx # adj-1  = n-1
	mov $0, %r8 #  index m = 0
	mov $0, %r9 # return value r9 = 0
loop:
	movq (%rsi, %rdx), %rcx # rcx store h[n-1]
	imulq (%rdi, %r8), %rcx # rcx = h[n-1-m] * Signal[m]
	addq %rcx, %r9 #return value r9 + rcx
	cmp $0, %edx # if (n-1 = 0)
	je endl #(if n-1 = 0 jmp to endl)
	inc %r8 #index m++
	dec %rdx # dec (n-1)--
	jmp loop 
endl:
	movb %r9b,%al #return to 8 bit 
	ret
