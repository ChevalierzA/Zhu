							CMPT295 Assignment2	
					Name: Zhu Zhuo                       ID:301329181	
/*1.(a) 106:

		106/2	53	0															
		53/2	26	1
		26/2	13	0
		13/2	6	1
		6/2		3	0													0110 = 6  1010 = 10 = A		
		3/2		1	1
		1/2		0	1   8-bit unsigned binary: 0110 1010     hexadecimal:  0110 1010 = 6A

		128:

		128/2	64	0
		64/2	32	0
		32/2	16	0
		16/2	8	0
		8/2		4	0
		4/2		2	0													1000 = 8	0000 = 0					
		2/2		1	0
		1/2		0	1   8-bit unsigned binary: 1000 0000  	  hexadecimal:	1000 0000 = 80

		150:

		150/2	75	0
		75/2	37	1
		37/2	18	1
		18/2	9	0
		9/2		4	1
		4/2		2	0													1001 = 9	0110 = 6			
		2/2		1	0													
		1/2		0	1   8-bit unsigned binary: 1001 0110       hexadecimal:	  1001 0110 = 96


	(b) -1:

		1/2		0	1	8-bit unsigned binary of 1: 0000 0001   flip it and add 1: 1111 1110 + 1 = 1111 1111
						8-bit two’s complement binary: 1111 1111


		-106:

		106/2	53	0
		53/2	26	1
		26/2	13	0
		13/2	6	1
		6/2		3	0
		3/2		1	1
		1/2		0	1 	8-bit unsigned binary of 106: 0110 1010  flip it and add 1: 1001 0101 + 1 = 1001 0110
						8-bit two’s complement binary: 1001 0110

		
		-128:
						8-bit unsigned binary of 128: 1000 0000  flip it and add 1:	0111 1111 + 1 = 1000 0000

	(c) unsigned:  10101110 = 1*2^7 + 0*2^6 + 1*2^5 + 0*2^4 + 1*2^3 + 1*2^2 + 1*2^1 + 0*2^0 = 128+0+32+0+8+4+2+0 = 174

		two's complement : 1010 1110 flip it and add 1: 0101 0001 + 1 = 0101 0010 to decimal = 82 2's complement = -82


	(d) a.

		1010 1110 :	1010 = 10 = A  1110 = 14 = E   1010 1110 = AE		AE + 37: 1010 + 0011 = 1101 = D
		0011 0111 : 0011 = 3  	   0111 = 7        0011 0111 = 37      			 1110 + 0111 = 1 0101 = 0101 = 5 

		AE + 37 = D5
		
		b.

		1111 1010 : 1111 = 15 = F  1010 = 10 = A   1111 1010 = FA		FA + AE: 1111 + 1010 = 1 1001 = 1001 = 9
		1010 1110 : 1010 = 10 = A  1110 = 14 = E   1010 1110 = AE 				 1010 + 1110 = 1 0000 = 0 =  0

		FA + AE = 90


  2. (a). k = {2,3,5,9}
     (b). 13k:		mov %edi, %eax
     			leal (%edi, %edi, 2), %edi
			leal (%eax, %edi, 4), %edi
	
	  20k:		leal (%edi, %edi, 4), %edi
	  		mov %edi, %eax
			leal %eax(%edi, %edi, 2), %edi
	
	  37k:		mov %edi, %eax
	  		leal (%edi, %edi, 8), %edi
			leal (%eax, %edi, 4), %edi
