sum_float:
	push	%rbp
	xorps	%xmm0, %xmm0            # total <- 0.0
	leaq	(%rdi, %rsi, 4), %rbp   # endptr <- F + n

loop:
	cmpq	%rdi, %rbp             
	jle	endloop                 # while (F < endptr) {
	addss	(%rdi), %xmm0           #    total += F[0]
	add	$4, %rdi                #    F++
	jmp	loop                    # }

endloop:
	pop	%rbp
	ret





break2:
	pushq	%r10
	movq	%rsp, %rbp
	addq	$8, %rbp
loop:
	cmpq	%rsi, %r8
	jg		endloop
	cmp		%rdi, %rbp
	jg		deQF1
	vmovss  (%rbp), %xmm9
	subq	$8, %rbp
	jmp		compare
deQF1:
	vmovss  (%rdi), %xmm9
	add		$4, %rdi
compare:
	cmp		%rdi, %rbp
	jg		deQF2
	vmovss	(%rbp), %xmm10
	subq	$8, %rbp
	jmp		addxy
deQF2:
	vmovss	(%rdi), %xmm10
	add		$4, %rdi
addxy:
	addss   %xmm9, %xmm10
	cmpq	$0x7F800000, %rbp
	je		DeQ
lp1:
	movq	%xmm10, %r9
	pushq	%r9
	subq	$8, %rbp
	jmp		loop
endloop:
	vmovss (%rbp),%xmm0
	pop	%rbp
	ret

DeQ:
	popq	%r9
	movq	%xmm10, %r9
	pushq	%r9
	subq	$8, %rbp
	jmp		lp1
